<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.igl.gov.system.dao.SysRoleModuleDao">
    <resultMap id="sysRoleModuleDto" type="com.igl.gov.system.dto.SysRoleModuleDto">
        <id column="id" property="id"/>
        <id property="roleId" column="role_id"/>
        <id property="moduleId" column="module_id"/>
        <id property="url" column="url"/>
        <id property="icon" column="icon"/>
        <id property="moduleCode" column="module_code"/>
        <id property="roleName" column="role_name" />
        <id property="roleTypeName" column="roleTypeName" />
        <id property="moduleName" column="module_name" />
        <id property="moduleDesc" column="module_desc"/>
        <id property="moduleTypeName" column="moduleTypeName"/>
    </resultMap>
    <resultMap id="sysRoleModuleTreeDto" type="com.igl.gov.system.dto.SysRoleModuleTreeDto">
        <id property="roleId" column="role_id"/>
        <id property="moduleId" column="module_id"/>
        <id property="url" column="url"/>
        <id property="icon" column="icon"/>
        <id property="moduleCode" column="module_code"/>
        <id property="roleName" column="role_name" />
        <id property="moduleName" column="module_name" />
        <id property="moduleDesc" column="module_desc"/>
        <id property="moduleType" column="module_type"/>
    </resultMap>
    <insert id="insert" parameterType="SysRoleModule" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO sys_role_module(role_id,module_id,create_time,create_by) VALUES (#{roleId},#{moduleId},now(),
		<choose>
            <when test="createBy != null">
                #{createBy}
            </when>
            <otherwise>
                0
            </otherwise>
        </choose>)
	 </insert>

    <sql id="whereSql">
        <where>
            <if test="moduleName != null and moduleName != ''">
                 c.module_name LIKE CONCAT('%',#{moduleName},'%')
            </if>
            <if test="roleName != null and roleName != ''">
                 b.role_name like CONCAT('%',#{roleName},'%')
            </if>
            <if test="moduleCode != null and moduleCode != ''">
                 c.module_code like CONCAT('%',#{moduleCode},'%')
            </if>
            <if test="roleType != null">
                b.role_type = #{roleType}
            </if>
            <if test="moduleType != null">
                c.module_type = #{moduleType}
            </if>
        </where>
    </sql>

    <select id="query" parameterType="SysRoleModuleParam" resultMap="sysRoleModuleDto">
            SELECT
            a.id,
            a.role_id,
            a.module_id,
            b.role_name,
            d.dict_name AS roleTypeName,
            c.url,
            c.icon,
            c.module_code,
            c.module_name,
            c.module_desc,
            e.dict_name as moduleTypeName
            FROM
            sys_role_module AS a
            INNER  JOIN sys_role AS b ON(a.role_id  = b.id)
            INNER  JOIN sys_module AS c ON (a.module_id = c.id)
            INNER JOIN sys_dictionary AS d ON(b.role_type = d.dict_code)
            INNER JOIN sys_dictionary AS e ON(c.module_type = e.dict_code)
            <include refid="whereSql"/>
            limit #{start},#{offset}
    </select>

    <select id="count" parameterType="SysRoleModuleParam" resultType="int">
        SELECT
        count(1)
        FROM
        sys_role_module AS a
        INNER  JOIN sys_role AS b ON(a.role_id  = b.id)
        INNER  JOIN sys_module AS c ON (a.module_id = c.id)
        <include refid="whereSql"/>
    </select>

    <delete id="delete" parameterType="map">
        DELETE  from sys_role_module where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="find" parameterType="integer" resultMap="sysRoleModuleDto" >
            SELECT
            a.id,
            a.role_id,
            a.module_id,
            b.role_name,
            d.dict_name AS roleTypeName,
            c.url,
            c.icon,
            c.module_code,
            c.module_name,
            c.module_desc,
            e.dict_name as moduleTypeName
            FROM
            sys_role_module AS a
            INNER  JOIN sys_role AS b ON(a.role_id  = b.id)
            INNER  JOIN sys_module AS c ON (a.module_id = c.id)
            INNER JOIN sys_dictionary AS d ON(b.role_type = d.dict_code)
            INNER JOIN sys_dictionary AS e ON(c.module_type = e.dict_code)
            WHERE a.id = #{id}
    </select>

    <select id="countRoleModule" parameterType="SysRoleModule" resultType="int" >
        SELECT
        count(1)
        FROM
        sys_role_module
        WHERE module_id = #{moduleId}
        and role_id = #{roleId}
    </select>

    <select id="queryRoleModuleByRoleIdAndModuleId" parameterType="map" resultMap="sysRoleModuleTreeDto">
            SELECT
              a.role_id,
              a.module_id,
              c.module_code,
              c.module_name,
              c.module_type,
              c.module_desc,
              b.role_name,
              c.icon,
              c.url
            FROM
                sys_role_module a
            INNER JOIN sys_role b ON (a.role_id = b.id)
            INNER JOIN sys_module c ON (a.module_id = c.id)
            WHERE
            b.id IN
            <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
                #{roleId}
            </foreach>
            <choose>
                <when test="pid != null">
                    AND c.pid = #{pid};
                </when>
                <when test="id != null">
                    AND c.id = #{id};
                </when>
                <otherwise>
                    AND c.pid IS NULL
                </otherwise>
            </choose>
    </select>
</mapper>